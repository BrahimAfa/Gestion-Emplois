@using GestionEmploi.Models;
@{
  ViewBag.Title = "Home Page";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/emplois.css")

<style>
  .circle-2 {
    margin-right: 3px;
    background-color: #0d6efd;
    height: 30px;
    width: 30px;
    /* border-radius: 50%; */
    /* padding: 10px; */
    display: flex;
    color: #fff;
    cursor: pointer;
    justify-content: center;
    font-size: 20px;
    align-items: center;
  }

    .circle-2:hover {
      color: #efefef
    }
</style>
<div class="container">
  <div class="container d-flex justify-content-center align-items-center">
    <div class="dropdown w-50">
      <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownSemain" data-toggle="dropdown" aria-haspopup="true"
              aria-expanded="false">
        Chose Semain
      </button>
      <div id="menu" class="dropdown-menu w-100" aria-labelledby="dropdownSemain">
        <form class="px-4 py-2">
          <input data-empty="emptySemain" data-id="dropdown-Semain" type="search" class="form-control" id="searchSemain" placeholder="SALLE 8" autofocus="autofocus">
        </form>
        <div id="menuSemain"></div>
        <div id="emptySemain" class="dropdown-header">No Salle found</div>
      </div>
    </div>
  </div>
  <div class="container d-flex justify-content-center align-items-center">

    <div class="dropdown w-50">
      <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownAnnee" data-toggle="dropdown" aria-haspopup="true"
              aria-expanded="false">
        Chose Annee
      </button>
      <div id="menu" class="dropdown-menu w-100" aria-labelledby="dropdownAnnee">
        <form class="px-4 py-2">
          <input data-empty="emptyAnnee" data-id="dropdown-Annee" type="search" class="form-control" id="searchAnnee" placeholder="SALLE 8" autofocus="autofocus">
        </form>
        <div id="menuAnnee"></div>
        <div id="emptyAnnee" class="dropdown-header">No Salle found</div>
      </div>
    </div>
  </div>
  <div class="container d-flex justify-content-center align-items-center">

    <div class="dropdown w-50">
      <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownFiliere" data-toggle="dropdown" aria-haspopup="true"
              aria-expanded="false">
        Chose Filiere
      </button>
      <div id="menu" class="dropdown-menu w-100" aria-labelledby="dropdownFiliere">
        <form class="px-4 py-2">
          <input data-empty="emptyFiliere" data-id="dropdown-Filiere" type="search" class="form-control" id="searchFiliere" placeholder="SALLE 8" autofocus="autofocus">
        </form>
        <div id="menuFiliere"></div>
        <div id="emptyFiliere" class="dropdown-header">No Salle found</div>
      </div>
    </div>
  </div>
  <div class="container d-flex justify-content-center align-items-center">

    <div class="dropdown w-50">
      <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownNiv" data-toggle="dropdown" aria-haspopup="true"
              aria-expanded="false">
        Chose Niveau
      </button>
      <div id="menu" class="dropdown-menu w-100" aria-labelledby="dropdownNiv">
        <form class="px-4 py-2">
          <input data-empty="emptyNiv" data-id="dropdown-Niv" type="search" class="form-control" id="searchNiv" placeholder="SALLE 8" autofocus="autofocus">
        </form>
        <div id="menuNiv"></div>
        <div id="emptyNiv" class="dropdown-header">No Salle found</div>
      </div>
    </div>
  </div>
  <div class="table-responsive">
    <table class="table text-center">
      <thead>
        <tr>
          <th></th>
          @{
            foreach (string item in (ViewBag.globalSeanc as viewSeances).seances)
            {
              <th>@item</th>
            }
          }

        </tr>
      </thead>

      <tbody>
        @{

          foreach (var kvp in (ViewBag.globalSeanc as viewSeances).seanceByDay)
          {

            <tr>
              <td>
                <b>@kvp.Key</b>
              </td>
              @{ foreach (var item in kvp.Value)
                {
                  <td class="position-relative" data-info="@(kvp.Key + "_" + @item.name)" id="@(kvp.Key + "_" + @item.id)">
                    <div data-id="@(kvp.Key + "_" + @item.id)" data-info="@(kvp.Key + "_" + @item.name)" class="modalBtn  btn btn-outline-primary rounded-circle btn-lg">+</div>
                  </td>
                } }
            </tr>


          }
        }

      </tbody>
    </table>
    <div class="text-center my-4">
      <button id="btnSend" class="btn btn-warning">Check offer</button>
    </div>

  </div>

</div>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">
          Ajouter Seancce
        </h5> <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="container d-flex justify-content-center align-items-center">

          <div class="dropdown w-50">
            <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownLocals" data-toggle="dropdown" aria-haspopup="true"
                    aria-expanded="false">
              Chose Local
            </button>
            <div id="menu" class="dropdown-menu" aria-labelledby="dropdownLocals">
              <form class="px-4 py-2">
                <input data-empty="emptyLocal" data-id="dropdown-local" type="search" class="form-control" id="searchLocal" placeholder="SALLE 8" autofocus="autofocus">
              </form>
              <div id="menuLocals"></div>
              <div id="emptyLocal" class="dropdown-header">No Salle found</div>
            </div>
          </div>
        </div>
        @*cours Drop Down*@
        <div class="container d-flex justify-content-center align-items-center">

          <div class="dropdown w-50">
            <button class="btn w-100 btn-secondary dropdown-toggle" type="button" id="dropdownCours" data-toggle="dropdown" aria-haspopup="true"
                    aria-expanded="false">
              Chose Cour
            </button>
            <div id="menu" class="dropdown-menu" aria-labelledby="dropdownCours">
              <form class="px-4 py-2">
                <input data-empty="emptyCour" data-id="dropdown-Cour" type="search" class="form-control" id="searchCour" placeholder=".Net" autofocus="autofocus">
              </form>
              <div id="menuCours"></div>
              <div id="emptyCour" class="dropdown-header">No Salle found</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>



  let detailEmplois = [{}];
  let currentSeanceId;
  let currentSeance = {
    cours: null,
    CourId: null,
    seance: null,
    SeanceId: null,
    local: null,
    LocalId: null,
    prof: null
  }
  const data = {
    emplois: {
      SemaineId: 1,
      AnneeId: 1,
      NiveauId: 1
    },
    detailEmplois: []
  }
  $('#btnSend').on('click', function () {
    console.log(data)
   //return;
    $.ajax({
      type: "POST",
      url: "/Emplois/jsonData",
      data: JSON.stringify(data),
      contentType: "application/json; charset=utf-8",
      dataType: "json",
      success: function (response) {
        if (response != null) {
          alert("Name : " + response.name);
        } else {
          alert("Something went wrong");
        }
      },
      failure: function (response) {
        alert(response.responseText);
      },
      error: function (response) {
        alert(response.responseText);
      }
    });
  })
  function SeanceDataTemplate() {

    return `<div class="d-flex flex-column justify-content-center align-items-center">
                <span class="border-2 border-bottom pb-1">${currentSeance.cours}</span>
                <span class="border-2 border-bottom fw-bold pb-1 text-black-50">M.Ouarrachi</span>
                <span class="time">${currentSeance.local}</span>
              </div>
              <div data-courId ="${currentSeance.CourId}"  data-localId ="${currentSeance.LocalId}"  data-cours ="${currentSeance.cours}" data-local ="${currentSeance.local}" class="d-flex position-absolute" style="top: 0; right: 0;">
                <span class="circle-2 deleteSeance">
                  <i class='bx bx-trash'></i>
                </span>
                <span data-info="somethingTeGetThisData" class="circle-2 updateSeance">
                  <i class='bx bxs-message-square-edit'></i>
                </span>
              </div>`
  }

  // for showing the modal
  $(document).on('click', '.modalBtn', function () {
    console.log(this.dataset.id);
    currentSeanceId = this.dataset.id;
    $('#exampleModal').modal("show");
    let seanceInfo = this.dataset.info.split('_');
    $('#exampleModalLabel').text(`Ajouter Seance : ${seanceInfo[0]} à ${seanceInfo[1]}`);
  });

  $(document).on('click', '.deleteSeance', function () {
    console.log("hello")
    let node = $(this.parentNode.parentNode);       // i lefte it here
    node.html(`<div data-id="${node.attr('id')}" data-info="${node.data().info}" class="modalBtn btn btn-outline-primary rounded-circle btn-lg" >+</div>`)
    console.log(node.attr('id'));
    let itemIndex = data.detailEmplois.findIndex(x => x.SeanceId == node.attr('id').split('_')[1])
    console.log(itemIndex);
    if (itemIndex >= 0) {
      data.detailEmplois.splice(itemIndex, 1);
    }
  });
  $(document).on('click', '.updateSeance', function () {
    let node = $(this.parentNode.parentNode);       // i lefte it here
    let updateData = $(this.parentNode).data();
    console.log({updateData})
    $('#dropdownLocals').text(updateData.local)
    $('#dropdownCours').text(updateData.cours)
    currentSeanceId = node.attr('id');
    $('#exampleModal').modal("show");
    currentSeanceId = node.attr('id')
    currentSeance.CourId = updateData.courid;
    currentSeance.LocalId = updateData.localid;
    currentSeance.cours = updateData.cours;
    currentSeance.local = updateData.local;
    console.log(currentSeance);
    
    let seanceInfo = node.data().info.split('_');
    $('#exampleModalLabel').text(`Ajouter Seance : ${seanceInfo[0]} à ${seanceInfo[1]}`);

  });


  /* ========================q===> MODAL COMBO BOX CODE START : <================== */
  //Initialize with the list of symbols
  let locals = ["SALL 8", "SALL 7", "ATELIE 7", "BIBLIO"]
  let cours = [".NET", "JAVA AVANCE", "PHP", "GOUVERNANCE"]
  let semain = ["Semain1", "Seamin2", "Semain3", "Semain4"]
  let niveau = ["cp1", "cp2", "GINFO 1", "GINFO 2"]
  let filiere = ["GINOF", "CP", "GTR", "GPMC"]
  let annnes = ['2019/2018','2020/2021']
  $.ajax({
    type: "GET",
    url: "/Emplois/Filieres",
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (response) {
      if (response != null) {
        filiere = response;
        buildDropDown(filiere, 'dropdown-Filiere', '#menuFiliere', '#emptyFiliere', "#dropdownFiliere", "FiliereId")

      } else {
        alert("Something went wrong");
      }
    },
    failure: function (response) {
      alert(response.responseText);
    },
    error: function (response) {
      alert(response.responseText);
    }
  });

  $.ajax({
    type: "GET",
    url: "/Emplois/Semains",
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (response) {
      if (response != null) {
        semain = response;
        buildDropDown(semain, 'dropdown-Semain', '#menuSemain', '#emptySemain', "#dropdownSemain", "SemaineId")

      } else {
        alert("Something went wrong");
      }
    },
    failure: function (response) {
      alert(response.responseText);
    },
    error: function (response) {
      alert(response.responseText);
    }
  });
  $.ajax({
    type: "GET",
    url: "/Emplois/Annnees",
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (response) {
      if (response != null) {
        annnes = response;
        buildDropDown(annnes, 'dropdown-Annee', '#menuAnnee', '#emptyAnnee', "#dropdownAnnee", "AnneeId")

      } else {
        alert("Something went wrong");
      }
    },
    failure: function (response) {
      alert(response.responseText);
    },
    error: function (response) {
      alert(response.responseText);
    }
  });

  //Find every item inside the dropdown
  function buildDropDownForLocals(values) {
    console.log(values)
    let contents = []
    for (let name of values) {
      contents.push(`<input type="button" class="dropdown-item dropdown-local" data-id="${name.LocalId}" value="${name.Libelle}"/>`)
    }
    console.log(contents)

    $('#menuLocals').append(contents.join(""))

    //Hide the row that shows no items were found
    $('#emptyLocal').hide()
  }

  //If the user clicks on any item, set the title of the button as the text of the item
  $('#menuLocals').on('click', '.dropdown-local', function () {
    $('#dropdownLocals').text($(this)[0].value)
    $("#dropdownLocals").dropdown('hide');
    currentSeance.local = $(this)[0].value
    currentSeance.LocalId = $(this)[0].dataset.id
  })

  $.ajax({
    type: "GET",
    url: "/Emplois/Locals",
    contentType: "application/json; charset=utf-8",
    dataType: "json",
    success: function (response) {
      if (response != null) {
        locals = response;
        buildDropDownForLocals(locals)

      } else {
        alert("Something went wrong");
      }
    },
    failure: function (response) {
      alert(response.responseText);
    },
    error: function (response) {
      alert(response.responseText);
    }
  });



  function buildDropDownForCours(values) {
    console.log(values)
    let contents = []
    for (let name of values) {
      contents.push(`<input data-id="${name.CourId}" type="button" class="dropdown-item dropdown-Cour" type="button" value="${name.Libelle}"/>`)
    }
    console.log(contents)

    $('#menuCours').html(contents.join(""))

    //Hide the row that shows no items were found
    $('#emptyCour').hide()
  }



  function filter(word, dataset) {
    console.log(word, dataset)
    let coursItems = document.getElementsByClassName(dataset.id);

    let length = coursItems.length
    let hidden = 0
    for (let i = 0; i < length; i++) {
      if (coursItems[i].value.toLowerCase().startsWith(word)) {
        $(coursItems[i]).show()
      }
      else {
        $(coursItems[i]).hide()
        hidden++
      }
    }

    //If all items are hidden, show the empty view
    if (hidden === length) {
      $('#' + dataset.empty).show()
    }
    else {
      $('#' + dataset.empty).hide()
    }
  }

  $('input').on('input', function () {
    filter(this.value, this.dataset)
  })

  $('#menuCours').on('click', '.dropdown-Cour', function () {
    $('#dropdownCours').text($(this)[0].value)
    $("#dropdownCours").dropdown('hide');
    currentSeance.cours = $(this)[0].value
    currentSeance.CourId = $(this)[0].dataset.id
  })
  function buildDropDown(values, uniqClass, menuId, emptyId, searchInputId, name) {
    console.log(values)
    let contents = []
    for (let data of values) {
      contents.push(`<input type="button" name="${name}" class="dropdown-item ${uniqClass}" data-id="${data.SemaineId || data.AnneeId || data.NiveauId || data.FiliereId}" value="${data.libelle || data.Libelle}"/>`)
    }
    console.log(contents)

    $(menuId).html(contents.join(""))

    //Hide the row that shows no items were found
    $(emptyId).hide()
    $(menuId).on('click', '.' + uniqClass, function () {
      let selectedInput = $(this)[0];
      if ($(selectedInput).attr("name") === "FiliereId") {
        $.ajax({
          type: "GET",
          url: "/Emplois/Niveaux/" + selectedInput.dataset.id,
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function (response) {
            if (response != null) {
              niveau = response;
              buildDropDown(niveau, 'dropdown-Niv', '#menuNiv', '#emptyNiv', "#dropdownNiv", "NiveauId")
            } else {
              alert("Something went wrong");
            }
          },
          failure: function (response) {
            alert(response.responseText);
          },
          error: function (response) {
            alert(response.responseText);
          }
        });
      } else if ($(selectedInput).attr("name") === "NiveauId"){
        $.ajax({
          type: "GET",
          url: "/Emplois/Cours/" + selectedInput.dataset.id,
          contentType: "application/json; charset=utf-8",
          dataType: "json",
          success: function (response) {
            if (response != null) {
              cours = response;
              buildDropDownForCours(cours)

            } else {
              alert("Something went wrong");
            }
          },
          failure: function (response) {
            alert(response.responseText);
          },
          error: function (response) {
            alert(response.responseText);
          }
        });
      }
      $(searchInputId).text(selectedInput.value)
      $(searchInputId).dropdown('hide');
      data.emplois[name] = selectedInput.dataset.id
    })
  }




  // Modal hidden event fired
  $('#exampleModal').on('hidden.bs.modal', function () {
    console.log("Modal closed " + currentSeanceId);
    console.log("Modal closed ", currentSeance);
    if (!currentSeance.CourId || !currentSeance.LocalId) return;
    $(`#${currentSeanceId}`).html(SeanceDataTemplate())
    $('#dropdownLocals').text("Chose Local")
    $('#dropdownCours').text("Chose Cours")
    currentSeance.SeanceId = currentSeanceId.split('_')[1];
    let detaillSeance = JSON.parse(JSON.stringify(currentSeance))
    let itemIndex = data.detailEmplois.findIndex(x => x.SeanceId === currentSeance.SeanceId)
    if (itemIndex > 0) {
      data.detailEmplois.splice(itemIndex, 1);
    }
    data.detailEmplois.push(detaillSeance);
    currentSeance = {};

  });
  $('#exampleModal').on('show.bs.modal', function () {
    console.log("Modal Opened");
  });
   /* ===========================> MODAL COMBO BOX CODE END : <================== */


</script>





@*<div class="d-flex flex-column justify-content-center align-items-center">
  <span class="border-2 border-bottom pb-1">.Net Programming</span>
  <span class="border-2 border-bottom fw-bold pb-1 text-black-50">M.Ouarrachi</span>
  <span class="time">Atelier 7</span>
</div>
<div class="d-flex position-absolute" style="top: 0; right: 0;">
  <span class="circle-2 deleteSeance">
    <i class='bx bx-trash'></i>
  </span>
  <span class="circle-2">
    <i class='bx bxs-message-square-edit'></i>
  </span>
</div>*@